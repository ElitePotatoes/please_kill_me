#ifndef LAB_ALGORITHM_H
#define LAB_ALGORITHM_H

#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <stddef.h>

//обменивает значения между адресами a и b.
void swap(int *a, int *b);

//обменивает значения между адресами a и b.
void swapVoid(void *a, void *b, size_t size);

//Возвращает максимальное значение из двух чисел a, b.
int max2(int a, int b);

//Возвращает максимальное значение из трёх чисел a, b, c.
int max2(int a, int b);

//Возвращает минимальное значение из двух чисел a, b.
int min2(int a, int b);

//Возвращает минимальное значение из трёх чисел a, b, c.
int min3(int a, int b, int c);

//Упорядочивает значения двух переменных по адресам a и b.
void sort2(int *a, int *b);

//Упорядочивает значения трех переменных по адресам a, b и c.
void sort3(int *a, int *b, int *c);

//Возвращает значения расстояния между двумя точками с координатами (x1, y1) и (x2, y2).
double getDistance(int x1, int y1, int x2, int y2);

//Выводит корни уравнения с коэффициентами a, b и с.
void solveX2(double a, double b, double c);

//Возвращает значение в зависимости от введённых значений сторон a, b и с: 1 - треугольник существует, 0 - треугольник не существует.
int trueTriangle(int *a, int *b, int *c);

//Возвращает значения в зависимости от введенных значений сторон a, b и с: -1 - треугольника не существует, 0 - треугольник остроугольный, 1 - треугольник прямоугольный, 2 - треугольник тупоугольный.
int getTriangleTypeLength(int *a, int *b, int *c);

//Возвращает значения в зависимости от введенного числа x: 1 - число простое, 0 - число непростое.
int isPrimeViaSqrtSteps2(int x);

//Возвращает значения в зависимости от введенного символа: 1 - цифра, 0 - всё остальное.
int isDigit(char x);

int translationToBin(int num);

int deleteOctNumber(int *num, int digit);

int printOct(int num);

//Возвращает максимальное подряд идущих число битов, равных единице в двоичном представлении числа num.
int getMaxLenghUnits(int num);

//Возвращает число num, переставляя в обратном порядке цифры в шестнадцатеричном представлении данного натурального числа.
void invertHex(int *num);

//Возвращает натуральное число num, меняя местами, начиная с младших, соседние разряды в двоичной записи данного натурального числа num (Непарная старшая цифра остается без изменений).
int swapPairBites(int num);

//Выводит число num в восьмеричном представлении.
int printOct(int num);

//Возвращает максимальное подряд идущих число битов, равных единице в двоичном представлении числа num.
int getMaxLenghUnits(int num);

#endif //LAB_ALGORITHM_H
